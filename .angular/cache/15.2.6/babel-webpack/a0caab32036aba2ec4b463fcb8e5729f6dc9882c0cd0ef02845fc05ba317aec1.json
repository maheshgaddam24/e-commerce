{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { map } from \"rxjs/operators\";\nlet ProductComponent = class ProductComponent {\n  constructor(route, productService, cartService) {\n    this.route = route;\n    this.productService = productService;\n    this.cartService = cartService;\n    this.thumbimages = [];\n  }\n  ngOnInit() {\n    this.route.paramMap.pipe(map(param => {\n      // @ts-ignore\n      return param.params.id;\n    })).subscribe(prodId => {\n      this.id = prodId;\n      this.productService.getSingleProduct(this.id).subscribe(prod => {\n        this.product = prod;\n        if (prod.images !== null) {\n          this.thumbimages = prod.images.split(';');\n        }\n      });\n    });\n  }\n  ngAfterViewInit() {\n    // Product Main img Slick\n    $('#product-main-img').slick({\n      infinite: true,\n      speed: 300,\n      dots: false,\n      arrows: true,\n      fade: true,\n      asNavFor: '#product-imgs'\n    });\n    // Product imgs Slick\n    $('#product-imgs').slick({\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      arrows: true,\n      centerMode: true,\n      focusOnSelect: true,\n      centerPadding: 0,\n      vertical: true,\n      asNavFor: '#product-main-img',\n      responsive: [{\n        breakpoint: 991,\n        settings: {\n          vertical: false,\n          arrows: false,\n          dots: true\n        }\n      }]\n    });\n    // Product img zoom\n    var zoomMainProduct = document.getElementById('product-main-img');\n    if (zoomMainProduct) {\n      $('#product-main-img .product-preview').zoom();\n    }\n  }\n  addToCart(id) {\n    this.cartService.AddProductToCart(id, this.quantityInput.nativeElement.value);\n  }\n  Increase() {\n    let value = parseInt(this.quantityInput.nativeElement.value);\n    if (this.product.quantity >= 1) {\n      value++;\n      if (value > this.product.quantity) {\n        // @ts-ignore\n        value = this.product.quantity;\n      }\n    } else {\n      return;\n    }\n    this.quantityInput.nativeElement.value = value.toString();\n  }\n  Decrease() {\n    let value = parseInt(this.quantityInput.nativeElement.value);\n    if (this.product.quantity > 0) {\n      value--;\n      if (value <= 0) {\n        // @ts-ignore\n        value = 0;\n      }\n    } else {\n      return;\n    }\n    this.quantityInput.nativeElement.value = value.toString();\n  }\n};\n__decorate([ViewChild('quantity')], ProductComponent.prototype, \"quantityInput\", void 0);\nProductComponent = __decorate([Component({\n  selector: 'mg-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})], ProductComponent);\nexport { ProductComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}